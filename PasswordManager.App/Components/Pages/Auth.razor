@page "/auth"
@using PasswordManager.Services.Interfaces
@inject IPlatformService PlatformService
@inject IPasscodeService PasscodeService
@inject NavigationManager Navigation

@if (showPasscode)
{
    <Passcode OnPasscodeComplete="OnPasscodeComplete" />
}
else if (showLogin)
{
    <PasswordManager.App.Components.Pages.Login />
}
else
{
    <div class="loading-container">
        <div class="loading-spinner"></div>
        <p>Initializing...</p>
    </div>
}

<style>
    .loading-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 16px;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

@code {
    private bool showPasscode = false;
    private bool showLogin = false;

    protected override async Task OnInitializedAsync()
    {
        // Check if this is a mobile platform and if passcode is configured
        if (PlatformService.IsMobilePlatform())
        {
            var isPasscodeSet = await PasscodeService.IsPasscodeSetAsync();
            if (isPasscodeSet)
            {
                showPasscode = true;
                return;
            }
        }

        // No passcode required or not mobile, go directly to login
        showLogin = true;
    }

    private async Task OnPasscodeComplete(bool success)
    {
        if (success)
        {
            showPasscode = false;
            showLogin = true;
            StateHasChanged();
        }
        else
        {
            // This shouldn't happen in normal flow, but handle gracefully
            showLogin = true;
            StateHasChanged();
        }
    }
}